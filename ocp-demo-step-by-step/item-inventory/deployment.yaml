apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
  labels:
    app.kubernetes.io/version: 0.0.10
    app.kubernetes.io/name: item-inventory
  name: item-inventory
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 0.0.10
      app.kubernetes.io/name: item-inventory
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
      labels:
        app.kubernetes.io/version: 0.0.10
        app.kubernetes.io/name: item-inventory
    spec:
      containers:
      - args:
        - -Dquarkus.http.host=0.0.0.0
        - -Djava.util.logging.manager=org.jboss.logmanager.LogManager
        - -jar
        - /deployments/quarkus-run.jar
        command:
        - java
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JAVA_APP_JAR
          value: /deployments/quarkus-run.jar
        - name: KAFKA_SECURITY_PROTOCOL
          value: PLAINTEXT
        - name: KAFKA_SASL_MECHANISM
          value: PLAIN
        - name: KAFKA_USER
          value: admin-user
        - name: USER_CERT_PWD
          value: ""
        - name: KAFKA_CERT_PWD
          value: ""
        - name: JAAS_CFG
          valueFrom:
            secretKeyRef:
              key: sasl.jaas.config
              name: admin-user
        envFrom:
        - configMapRef:
            name: item-inventory-cm
        image: quay.io/ibmcase/item-aggregator:0.0.10
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: item-inventory
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
      serviceAccount: item-inventory

